<!DOCTYPE html>
<html lang="fr">

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <!-- GoogleFonts -->
   <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
   <meta http-equiv="X-UA-Compatible" content="ie=edge">
   <title>Document</title>
   <style>
      /** Commun */
     * { padding: 0;
         margin: 0;
         box-sizing: border-box;
         font-family: Montserrat;
     }
     
     /** Flex direction */
     .flex { display: flex;}
     .row { flex-direction: row;}
     .row-reverse { flex-direction: row-reverse;}
     .column { flex-direction: column;}
     .column-reverse { flex-direction: column-reverse;}
     .wrap { flex-wrap: wrap;}
     .wrap-reverse { flex-wrap: wrap-reverse;}
     
     /** Alignement axe principal */
     .justif-start { justify-content: flex-start;}
     .justif-center { justify-content: center;}
     .justif-between { justify-content: space-between;}
     .justif-around { justify-content: space-around;}
     .justif-evenly { justify-content: space-evenly;}
     .justif-end { justify-content: flex-end;}
     
     /** Alignement axe perpendiculaire */
     .align-start { align-items: flex-start;}
     .align-center { align-items: center;}
     .align-stretch { align-items: stretch;}
     .align-baseline { align-items: baseline;}
     .align-end { align-items: flex-end;}
     

     
     /** Centrage automatique du contenu*/
     .centre {
         align-items: center;
         display: flex;
         justify-content: center;
     }
   .blocaddresse {
      border: 2px solid #ccc;
      padding: 15px;
      border-radius: 7px;
      background-color: white;
      position:relative;
      margin-bottom: 15px;
   }
   .shadow {
      box-shadow: 0 0 30px rgba(0,0,0,0.2);
   }
   input[type="checkbox"]{
      width: 25px;
    height: 25px;
    margin-right:15px;
    vertical-align:center;
   }
      .line {
        margin:7px 0;
       }
      .close {
         border-radius:50%;
         background-color: #ff8d8d;
         color:white;
         width:30px;
         height:30px;
         text-align:center;
        display:flex;
        justify-content: center;
        align-content: center;
         font-weight: bold;
         border:2px solid #ccc;
         position:absolute;
         right:-15px;
         top:-15px;
         font-size: 1.2em;
         cursor:pointer;
         transition:all 0.3s;
       }
       .close:hover {
          transform:scale(1.3);
          box-shadow: 0 0 20px rgba(0,0,0,0.5);
          border-color:white;
       }
       label {
          font-weight: bold;

       }
      input[type="button"], input[type="email"] {
         border:1px solid rgb(214, 214, 214);
      }
      input[type="email"]{
         padding: 15px;
         font-size: 1.3em;
         width:80%;
         border-right:none
      }
      .nooutline{
         outline:none;
      }
      input[type="button"]{
         background-color: #FFC107;
         border-bottom-right-radius:7px;
         border-left:none;
         border-top-right-radius:7px;
         color: #986211;
         cursor:pointer;
         font-size: 50px;
         font-weight: bold;
         /* padding:10px; */
         width: 20%;
      }
      #form1{
         background-color: rgba(220, 198, 224, 1);
         border-radius: 7px;
         border:2px solid rgb(179, 105, 194);
         margin: 50px auto;
         max-width: 640px;
         min-width: 320px;
         padding: 30px;
         width: 50%;
      }
      h1{
         text-align: center;
         margin:15px 0;

      }
      .nodisplay {
         display:none
      }
      #submit {
         background-color: rgb(230, 73, 183);
         border:2px solid  rgb(58, 18, 75);
         color: rgb(58, 18, 75);
         display:block;
         font-size:2em;
         font-weight:bold;
         padding:15px ;
         text-align: center;
         width: 100%;
         cursor:pointer;
         transition:all 0.2s
      }
      #submit:hover {
         background-color: rgb(117, 206, 57);
         border-color:rgb(67, 128, 27);
         transform:scale(1.05);
      }
   </style>
</head>

<body>


  

   <form action="" method="get" id="form1">
      <h1>En SuperForm !</h1>
      cliquez sur le + pour rajouter une adresse
      <div class="blocaddresse flex column shadow" id="blocadr1">
         <div class="line flex">
            <input type="checkbox" checked class="nooutline" id="cb1" value="1">
            <label for="cb1">Inscription à la newsletter</label>
         </div>
         <div class="line flex">
            <input type="email" class="nooutline" name="email1" id="email1" placeholder="Email...">
            <input id="btn1" type="button" class="nooutline" value="+">
         </div>
         <div class="close shadow">x</div>
      </div>
      <input id="submit" type="submit" class="line flex" value="Inscription">
      <p>
         Il faudrait cloner ce bloc et en injecter une copie lors de chaque clic sur un bouton +<br>
         Un clic sur la croix rouge supprime l'élément, sauf s'il s'agit du seul restant.<br>
         Les IDs / noms éventuels doivent bien entendu être uniques<br>
         Attention à la propagation des clics...<br>
         Selon que la case est cochée ou pas, le champ email possède ou pas un attribut nom<br>
         Ainsi, seuls les champs dont la case est cochée seront transmis...
      </p>
   </form>


   <script>
         var dqs = function(e){
            return document.querySelector(e);
         }
         var dce = function (e) {
             return document.createElement(e);
          }
          var dctn = function (e) {
             return document.createTextNode(e);
          }

          var form1 = document.getElementById("form1");
          dqs("#btn1").addEventListener("click", addEmail);
         
            function effaceBloc(e){
              e.stopPropagation();
              console.log(this.parentNode.id);
              if(this.parentNode.id != "blocadr2"){

                 this.parentNode.remove();
              }

            }
          function addEmail(e){
            if(e.target ==e.currentTarget){

               var nb = form1.querySelectorAll(".blocaddresse").length+1;
               tampon = document.querySelector("#blocadr1").cloneNode(true);
               tampon.id="blocadr"+nb;
               tampon.querySelector('input[type="checkbox"]').id="cb"+nb;
               tampon.querySelector("label").for="cb"+nb;
               tampon.querySelector('input[type="email"').id="email"+nb;
               tampon.querySelector('input[type="email"').setAttribute("data-name","email"+nb);

               tampon.querySelector('input[type="email"').name="email"+nb;
               tampon.querySelector(".close").addEventListener("click", effaceBloc);
               tampon.querySelector("#cb"+nb).addEventListener("change",cbName);
              form1.insertBefore( tampon,dqs("#submit"));
            }
            function cbName(e){
               e.stopPropagation();
               if(this.checked ===true){
                  // case est cochée
                  e.currentTarget.parentNode.querySelector("[type=\"email\"]").name=this.dataset.name;
               } else {
                  //case décochée
                  this.parentNode.querySelector("[type=\"email\"]").name="";

               }
            }
          }
   
      </script>
   

</body>

</html>